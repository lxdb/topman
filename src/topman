#!/usr/bin/env python3
# -*- Mode: Python; coding: utf-8; indent-tabs-mode: t; c-basic-offset: 4; tab-width: 4 -*- 
#
# main.py
# Copyright (C) 2019 LXDB <service@lxdb.de>
# 
# TopMan is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# TopMan is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program.  If not, see <http://www.gnu.org/licenses/>.
import gi 

gi.require_version('Gtk','3.0')

from gi.repository import Gtk, GdkPixbuf, Gdk

import os, sys, sqlite3
from datetime import date

os.system("bash /usr/local/share/topman/file.sh")

today = date.today()
today_date = today.strftime("%d/%m/%Y")

db = "/usr/local/share/topman/database.db"

s_zahl_0= 1
s_zahl_1= 1
s_zahl_2= 1

#Comment the first line and uncomment the second before installing
#or making the tarball (alternatively, use project variables)
#UI_FILE = "src/topman.ui"
UI_FILE = "/usr/local/share/topman/ui/topman.ui"
#self.builder = Gtk.Builder()
#self.builder.add_from_file(UI_FILE)

class Handler:
    def __init__(self):
        self.builder = Gtk.Builder()
        self.builder.add_from_file(UI_FILE)
        window = self.builder.get_object('mainWindow')
        self.updateDev()
        self.updateUser()
        self.updateGets()
        self.builder.connect_signals(self)
    
        window.show_all()
    
    
    def actGiveBack(self, buttonGiveBack):
        giveBackDialog = self.builder.get_object('giveBackDeviceDialog')
        give_id_entry = self.builder.get_object('giveBackDevEntryId')
        response = giveBackDialog.run()
        if response == Gtk.ResponseType.OK:
            give_id_text = give_id_entry.get_text()
            connection = sqlite3.connect(db)
            cursor = connection.cursor()
            cursor.execute("SELECT getDevId FROM Gets WHERE getId=" + give_id_text)
            device = cursor.fetchone()
            print(str(device[0]))
            cursor.execute("UPDATE Devices SET devState='verfügbar' WHERE devId=" + str(device[0]))
            cursor.execute("DELETE FROM Gets WHERE getId=" + give_id_text)
            connection.commit()
            connection.close()
            
        elif response == Gtk.ResponseType.CANCEL:
            print("CANCEL")
        giveBackDialog.hide()
        self.updateDev()
        self.updateGets()
            
    def actGetDev(self, buttonGetDevice):
        getDialog = self.builder.get_object('getDeviceDialog')
        response = getDialog.run()
        if response == Gtk.ResponseType.OK:
            get_id = self.builder.get_object('getDevEntryId')
            get_user_id = self.builder.get_object('getDevEntryUserId')
            get_dev_id = self.builder.get_object('getDevEntryDevId')
            get_id_text = get_id.get_text()
            get_user_id_text = get_user_id.get_text()
            get_dev_id_text = get_dev_id.get_text()
            
            print("Gerät wird ausgeliehen...")
            
            connection = sqlite3.connect(db)
            cursor= connection.cursor()
            cursor.execute("SELECT userName, userSurename,userClass FROM Users WHERE userId=" + get_user_id_text)
            NSC = cursor.fetchone()
            print(NSC)
            
            sql_text=""
            sql_text += "INSERT INTO Gets VALUES ("
            sql_text +=get_id_text +","
            sql_text +=" '" + NSC[0] + " " + NSC[1] + "," + NSC[2] +"',"
            sql_text +=" '"+get_user_id_text+"',"
            sql_text +=" '"+get_dev_id_text+"',"
            sql_text +=" '"+today_date+"')"
            
            print("sql_text ", sql_text)
            cursor.execute(sql_text)

            cursor.execute("UPDATE Devices SET devState='nicht verfügbar' WHERE devId=" + get_dev_id_text)
            
            connection.commit()
            connection.close()   
            
            
            
        elif response == Gtk.ResponseType.CANCEL:
            print("CANCEL")
        getDialog.hide()
        self.updateDev()
        self.updateGets()
        
    def actAboutTopMan(self, buttonOpenAbout):
        aboutDialog = self.builder.get_object('aboutTopMan')        
        aboutDialog.run()
        aboutDialog.hide()
        
    def actAddDevice(self, addDevButton):
        addDevDialog = self.builder.get_object('addDeviceDialog')
        response = addDevDialog.run()
        if response == Gtk.ResponseType.OK:
            print("Gerät wird hinzugefügt ...")
            connection = sqlite3.connect(db)
            cursor = connection.cursor()
            id_entry = self.builder.get_object("addDevEntryId")
            brand_entry = self.builder.get_object("addDevEntryBrand")
            model_entry = self.builder.get_object("addDevEntryModel")
            os_entry = self.builder.get_object("addDevEntryOS")
            host_entry = self.builder.get_object("addDevEntryHostname")
            id_text = id_entry.get_text()
            brand_text = brand_entry.get_text()
            model_text = model_entry.get_text()
            os_text = os_entry.get_text()
            host_text = host_entry.get_text()
            state_text = "verfügbar"

            sql_text=""
            sql_text += "INSERT INTO Devices VALUES ("
            sql_text +=id_text+","
            sql_text +=" '"+ brand_text +"',"
            sql_text +=" '"+ model_text +"',"
            sql_text +=" '"+ os_text +"',"
            sql_text +=" '"+ host_text +"',"
            sql_text +=" '"+ state_text +"')"

            print("sql_text ", sql_text)
            cursor.execute(sql_text)

            connection.commit()
            connection.close()
        
        else:
            print("CANCEL")
        
        addDevDialog.hide()
        self.updateDev()

    def actDelDevice(self, deleteDevButton):
        deleteDevDialog = self.builder.get_object("deleteDeviceDialog")
        response = deleteDevDialog.run()
        if response == Gtk.ResponseType.OK:
            del_dev_id_entry = self.builder.get_object("deleteDevEntryId")
            del_dev_id_text = del_dev_id_entry.get_text()
            connection = sqlite3.connect(db)
            cursor = connection.cursor()
            cursor.execute("SELECT devState FROM Devices WHERE devId=" + del_dev_id_text)
            state = cursor.fetchone()
            if state[0] != "verfügbar":
                dialog = Gtk.MessageDialog(deleteDevDialog, 0,Gtk.MessageType.ERROR,Gtk.ButtonsType.CANCEL, "Gerät in benutzung")
                dialog.format_secondary_text("Dieses Gerät wird momentan von einer Person benutzt. Das Gerät kann nicht entfernt werden.")
                dialog.run()
                dialog.destroy()
            else:
                cursor.execute("DELETE FROM Devices WHERE devId=" + del_dev_id_text)
                connection.commit()
                connection.close()
            self.updateDev()
        else:
            print("CANCEL")
        deleteDevDialog.hide()
        
    def actDelUser(self, deleteUserButton):
        deleteUserDialog = self.builder.get_object("deleteUserDialog")
        response = deleteUserDialog.run()
        if response == Gtk.ResponseType.OK:
            del_user_id_entry = self.builder.get_object("deleteUserEntry")
            del_user_id_text = del_user_id_entry.get_text()
            connection = sqlite3.connect(db)
            cursor = connection.cursor()
            cursor.execute("SELECT getUserId FROM Gets WHERE getUserId=" + del_user_id_text)
            state = cursor.fetchone()
                       
            if state == None:
                cursor.execute("DELETE FROM Users WHERE userId=" + del_user_id_text)
                connection.commit()
                connection.close()
                
            elif state[0] ==del_user_id_text:
                dialog = Gtk.MessageDialog(deleteDevDialog, 0,Gtk.MessageType.ERROR,Gtk.ButtonsType.CANCEL, "Person beschäftigt")
                dialog.format_secondary_text("Diese Person benutzt gerade ein Gerät. Sie kann nicht entfernt werden.")
                dialog.run()
                dialog.destroy()
            self.updateUser()
        else:
            print("CANCEL")
        deleteUserDialog.hide()
        
    def actAddUser(self, addUserButton):
        addUserDialog = self.builder.get_object('addUserDialog')
        response = addUserDialog.run()
        if response == Gtk.ResponseType.OK:
            print("Person wird hinzugefügt ...")
            connection = sqlite3.connect(db)
            cursor = connection.cursor()
            id_entry = self.builder.get_object("addUserEntryId")
            name_entry = self.builder.get_object("addUserEntryName")
            surename_entry = self.builder.get_object("addUserEntrySurename")
            class_entry = self.builder.get_object("addUserEntryClass")
            id_text = id_entry.get_text()
            name_text = name_entry.get_text()
            surename_text = surename_entry.get_text()
            class_text = class_entry.get_text()
            
            sql_text=""
            sql_text += "INSERT INTO Users VALUES ("
            sql_text +=id_text+","
            sql_text +=" '"+ name_text +"',"
            sql_text +=" '"+ surename_text +"',"
            sql_text +=" '"+ class_text +"')"
            
            print("sql_text ", sql_text)
            cursor.execute(sql_text)

            connection.commit()
            connection.close()
        
        else:
            print("CANCEL")
        
        addUserDialog.hide()
        self.updateUser()
        
    def devBack(self, deviceButtonBack):
        devicePageEntry = self.builder.get_object("devicePageEntry")
        global s_zahl_0
        s_zahl_0=int(devicePageEntry.get_text())
        if (s_zahl_0>2):
            s_zahl_0=s_zahl_0-1
            print('Seite: ',s_zahl_0)

        else:
            s_zahl_0=1
        
        
        devicePageEntry.set_text(str(s_zahl_0))
        self.updateDev()

    def devForward(self, deviceButtonForward):
        devicePageEntry = self.builder.get_object("devicePageEntry")
        print("vor")
        global s_zahl_0
        s_zahl_0=int(devicePageEntry.get_text())
    
        s_zahl_0=s_zahl_0+1


        devicePageEntry.set_text(str(s_zahl_0))
     
        self.updateDev()
        
    def userBack(self, userButtonBack):
        userPageEntry = self.builder.get_object("userPageEntry")
        global s_zahl_1
        s_zahl_0=int(userPageEntry.get_text())
        if (s_zahl_1>2):
            s_zahl_1=s_zahl_1-1
            print('Seite: ',s_zahl_1)

        else:
            s_zahl_1=1
        
        
        userPageEntry.set_text(str(s_zahl_1))
        self.updateUser()
        
    def userForward(self, userButtonForward):
        userPageEntry = self.builder.get_object("userPageEntry")
        print("vor")
        global s_zahl_1
        s_zahl_1=int(userPageEntry.get_text())
    
        s_zahl_1=s_zahl_1+1


        userPageEntry.set_text(str(s_zahl_1))
        self.updateUser()
        
    def getsBack(self, getsButtonBack):
        getsPageEntry = self.builder.get_object("getsPageEntry")
        global s_zahl_2
        s_zahl_2=int(getsPageEntry.get_text())
        if (s_zahl_2>2):
            s_zahl_2=s_zahl_2-1
            print('Seite: ',s_zahl_2)

        else:
            s_zahl_2=1
        
        
        getsPageEntry.set_text(str(s_zahl_2))
        self.updateGets()
        
    def getsForward(self, getsButtonForward):
        getsPageEntry = self.builder.get_object("getsPageEntry")
        print("vor")
        global s_zahl_2
        s_zahl_2=int(getsPageEntry.get_text())
    
        s_zahl_2=s_zahl_2+1


        getsPageEntry.set_text(str(s_zahl_2))
        self.updateGets()
        
    def actUpdate(self, buttonUpdate):
        self.updateDev()
        self.updateUser()
        self.updateGets()
        
    def updateDev(self):
        #Devices
        self.E_0_0 = self.builder.get_object("Id_0")
        self.E_1_0 = self.builder.get_object("Id_1")
        self.E_2_0 = self.builder.get_object("Id_2")
        self.E_3_0 = self.builder.get_object("Id_3")
        self.E_4_0 = self.builder.get_object("Id_4")
        self.E_5_0 = self.builder.get_object("Id_5")
        self.E_6_0 = self.builder.get_object("Id_6")
        self.E_7_0 = self.builder.get_object("Id_7")
        self.E_8_0 = self.builder.get_object("Id_8")
        self.E_9_0 = self.builder.get_object("Id_9")
        
        self.E_0_1 = self.builder.get_object("Brand_0")
        self.E_1_1 = self.builder.get_object("Brand_1")
        self.E_2_1 = self.builder.get_object("Brand_2")
        self.E_3_1 = self.builder.get_object("Brand_3")
        self.E_4_1 = self.builder.get_object("Brand_4")
        self.E_5_1 = self.builder.get_object("Brand_5")
        self.E_6_1 = self.builder.get_object("Brand_6")
        self.E_7_1 = self.builder.get_object("Brand_7")
        self.E_8_1 = self.builder.get_object("Brand_8")
        self.E_9_1 = self.builder.get_object("Brand_9")
        
        self.E_0_2 = self.builder.get_object("Model_0")
        self.E_1_2 = self.builder.get_object("Model_1")
        self.E_2_2 = self.builder.get_object("Model_2")
        self.E_3_2 = self.builder.get_object("Model_3")
        self.E_4_2 = self.builder.get_object("Model_4")
        self.E_5_2 = self.builder.get_object("Model_5")
        self.E_6_2 = self.builder.get_object("Model_6")
        self.E_7_2 = self.builder.get_object("Model_7")
        self.E_8_2 = self.builder.get_object("Model_8")
        self.E_9_2 = self.builder.get_object("Model_9")
        
        self.E_0_3 = self.builder.get_object("OS_0")
        self.E_1_3 = self.builder.get_object("OS_1")
        self.E_2_3 = self.builder.get_object("OS_2")
        self.E_3_3 = self.builder.get_object("OS_3")
        self.E_4_3 = self.builder.get_object("OS_4")
        self.E_5_3 = self.builder.get_object("OS_5")
        self.E_6_3 = self.builder.get_object("OS_6")
        self.E_7_3 = self.builder.get_object("OS_7")
        self.E_8_3 = self.builder.get_object("OS_8")
        self.E_9_3 = self.builder.get_object("OS_9")
        
        self.E_0_4 = self.builder.get_object("Hostname_0")
        self.E_1_4 = self.builder.get_object("Hostname_1")
        self.E_2_4 = self.builder.get_object("Hostname_2")
        self.E_3_4 = self.builder.get_object("Hostname_3")
        self.E_4_4 = self.builder.get_object("Hostname_4")
        self.E_5_4 = self.builder.get_object("Hostname_5")
        self.E_6_4 = self.builder.get_object("Hostname_6")
        self.E_7_4 = self.builder.get_object("Hostname_7")
        self.E_8_4 = self.builder.get_object("Hostname_8")
        self.E_9_4 = self.builder.get_object("Hostname_9")
        
        self.E_0_5 = self.builder.get_object("Status_0")
        self.E_1_5 = self.builder.get_object("Status_1")
        self.E_2_5 = self.builder.get_object("Status_2")
        self.E_3_5 = self.builder.get_object("Status_3")
        self.E_4_5 = self.builder.get_object("Status_4")
        self.E_5_5 = self.builder.get_object("Status_5")
        self.E_6_5 = self.builder.get_object("Status_6")
        self.E_7_5 = self.builder.get_object("Status_7")
        self.E_8_5 = self.builder.get_object("Status_8")
        self.E_9_5 = self.builder.get_object("Status_9")
        
        
        global s_zahl_0
        connection = sqlite3.connect(db)
        cursor= connection.cursor()
        sql = "SELECT * FROM Devices"
        cursor.execute(sql)
        
        text=""
        column_x=[]
        row_x=[]
    
        i=0
        for row in cursor:
        


            r0=str(row[0])
            r1=str(row[1])
            r2=str(row[2])
            r3=str(row[3])
            r4=str(row[4])
            r5=str(row[5])
        
        
            column_x = [(r0, r1, r2, r3, r4, r5)]
            row_x.extend(column_x)
        

    
        connection.commit()
        connection.close()
        print("len(column_x)", len(column_x))
        print("len(row_x)", len(row_x))
        x=len(row_x)

        #Reihe 0
        i=0
        self.E_0_0.set_text("")    
        k=0+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_0.set_text(x)
            print(self.E_0_0.get_text())
        except:
            self.E_0_0.set_text("")


        i=1
        self.E_0_1.set_text("")    
        k=0+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_0_1.set_text(x)
        except:
            self.E_0_1.set_text("")
        

        i=2
        self.E_0_2.set_text("")    
        k=0+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_2.set_text(x)
        except:
            self.E_0_2.set_text("")
        

        i=3
        self.E_0_3.set_text("")    
        k=0+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_3.set_text(x)
        except:
            self.E_0_3.set_text("")


        i=4
        self.E_0_4.set_text("")    
        k=0+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_4.set_text(x)
        except:
            self.E_0_4.set_text("")


        i=5
        self.E_0_5.set_text("")    
        k=0+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_5.set_text(x)
        except:
            self.E_0_5.set_text("")    
        

    
    

        #Reihe1
        i=0
        self.E_1_0.set_text("")    
        k=1+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_0.set_text(x)
        except:
            self.E_1_0.set_text("")


        i=1
        self.E_1_1.set_text("")    
        k=1+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_1_1.set_text(x)
        except:
            self.E_1_1.set_text("")
        

        i=2
        self.E_1_2.set_text("")    
        k=1+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_2.set_text(x)
        except:
            self.E_1_2.set_text("")
        

        i=3
        self.E_1_3.set_text("")    
        k=1+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_3.set_text(x)
        except:
            self.E_1_3.set_text("")


        i=4
        self.E_1_4.set_text("")    
        k=1+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_4.set_text(x)
        except:
            self.E_1_4.set_text("")
        

        i=5
        self.E_1_5.set_text("")    
        k=1+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_5.set_text(x)
        except:
            self.E_1_5.set_text("")

        #Reihe2
        i=0
        self.E_2_0.set_text("")    
        k=2+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_0.set_text(x)
        except:
            self.E_2_0.set_text("")


        i=1
        self.E_2_1.set_text("")    
        k=2+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_2_1.set_text(x)
        except:
            self.E_2_1.set_text("")
        

        i=2
        self.E_2_2.set_text("")    
        k=2+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_2.set_text(x)
        except:
            self.E_2_2.set_text("")
        

        i=3
        self.E_2_3.set_text("")    
        k=2+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_3.set_text(x)
        except:
            self.E_2_3.set_text("")


        i=4
        self.E_2_4.set_text("")    
        k=2+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_4.set_text(x)
        except:
            self.E_2_4.set_text("")
        

        i=5
        self.E_2_5.set_text("")    
        k=2+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_5.set_text(x)
        except:
            self.E_2_5.set_text("")


        #Reihe3
        i=0
        self.E_3_0.set_text("")    
        k=3+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_0.set_text(x)
        except:
            self.E_3_0.set_text("")


        i=1
        self.E_3_1.set_text("")    
        k=3+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_3_1.set_text(x)
        except:
            self.E_3_1.set_text("")
        

        i=2
        self.E_3_2.set_text("")    
        k=3+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_2.set_text(x)
        except:
            self.E_3_2.set_text("")
        

        i=3
        self.E_3_3.set_text("")    
        k=3+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_3.set_text(x)
        except:
            self.E_3_3.set_text("")



        i=4
        self.E_3_4.set_text("")    
        k=3+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_4.set_text(x)
        except:
            self.E_3_4.set_text("")


        i=5
        self.E_3_5.set_text("")    
        k=3+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_5.set_text(x)
        except:
            self.E_3_5.set_text("")

    

        #Reihe4
        i=0
        self.E_4_0.set_text("")    
        k=4+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_0.set_text(x)
        except:
            self.E_4_0.set_text("")


        i=1
        self.E_4_1.set_text("")    
        k=4+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_4_1.set_text(x)
        except:
            self.E_4_1.set_text("")
        

        i=2
        self.E_4_2.set_text("")    
        k=4+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_2.set_text(x)
        except:
            self.E_4_2.set_text("")
        

        i=3
        self.E_4_3.set_text("")    
        k=4+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_3.set_text(x)
        except:
            self.E_4_3.set_text("")


        i=4
        self.E_4_4.set_text("")    
        k=4+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_4.set_text(x)
        except:
            self.E_4_4.set_text("")
        

        i=5
        self.E_4_5.set_text("")    
        k=4+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_5.set_text(x)
        except:
            self.E_4_5.set_text("")
    
        #Reihe5
        i=0
        self.E_5_0.set_text("")    
        k=5+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_0.set_text(x)
        except:
            self.E_5_0.set_text("")


        i=1
        self.E_5_1.set_text("")   
        k=5+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_5_1.set_text(x)
        except:
            self.E_5_1.set_text("")
        

        i=2
        self.E_5_2.set_text("")    
        k=5+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_2.set_text(x)
        except:
            self.E_5_2.set_text("")
        

        i=3
        self.E_5_3.set_text("")   
        k=5+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_3.set_text(x)
        except:
            self.E_5_3.set_text("")


        i=4
        self.E_5_4.set_text("")   
        k=5+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_4.set_text(x)
        except:
            self.E_5_4.set_text("")
        

        i=5
        self.E_5_5.set_text("")   
        k=5+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_5.set_text(x)
        except:
            self.E_5_5.set_text("")
   


        #Reihe6
        i=0
        self.E_6_0.set_text("")  
        k=6+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_0.set_text(x)
        except:
            self.E_6_0.set_text("")


        


        i=1
        self.E_6_1.set_text("") 
        k=6+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_6_1.set_text(x)
        except:
            self.E_6_1.set_text("")
        

        i=2
        self.E_6_2.set_text("")    
        k=6+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_2.set_text(x)
        except:
            self.E_6_2.set_text("")
        

        i=3
        self.E_6_3.set_text("")    
        k=6+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_3.set_text(x)
        except:
            self.E_6_3.set_text("")


        i=4
        self.E_6_4.set_text("")    
        k=6+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_4.set_text(x)
        except:
            self.E_6_4.set_text("")
        

        i=5
        self.E_6_5.set_text("")    
        k=6+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_5.set_text(x)
        except:
            self.E_6_5.set_text("")
   
        #Reihe7
        i=0
        self.E_7_0.set_text("")   
        k=7+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_0.set_text(x)
        except:
            self.E_7_0.set_text("")


        i=1
        self.E_7_1.set_text("")    
        k=7+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_7_1.set_text(x)
        except:
            self.E_7_1.set_text("")
        

        i=2
        self.E_7_2.set_text("")    
        k=7+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_2.set_text(x)
        except:
            self.E_7_2.set_text("")
        

        i=3
        self.E_7_3.set_text("")    
        k=7+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_3.set_text(x)
        except:
            self.E_7_3.set_text("")


        i=4
        self.E_7_4.set_text("")    
        k=7+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_4.set_text(x)
        except:
            self.E_7_4.set_text("")
        

        i=5
        self.E_7_5.set_text("")    
        k=7+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_5.set_text(x)
        except:
            self.E_7_5.set_text("")

        #Reihe8
        i=0
        self.E_8_0.set_text("")    
        k=8+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_0.set_text(x)
        except:
            self.E_8_0.set_text("")


        i=1
        self.E_8_1.set_text("")    
        k=8+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_8_1.set_text(x)
        except:
            self.E_8_1.set_text("")
        

        i=2
        self.E_8_2.set_text("")    
        k=8+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_2.set_text(x)
        except:
            self.E_8_2.set_text("")
        

        i=3
        self.E_8_3.set_text("")    
        k=8+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_3.set_text(x)
        except:
            self.E_8_3.set_text("")


        i=4
        self.E_8_4.set_text("")    
        k=8+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_4.set_text(x)
        except:
            self.E_8_4.set_text("")
        
        i=5
        self.E_8_5.set_text("")    
        k=8+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_5.set_text(x)
        except:
            self.E_8_5.set_text("")
            

        #Reihe9
        i=0
        self.E_9_0.set_text("")    
        k=9+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_0.set_text(x)
        except:
            self.E_9_0.set_text("")


        i=1
        self.E_9_1.set_text("")   
        k=9+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_9_1.set_text(x)
        except:
            self.E_9_1.set_text("")
        

        i=2
        self.E_9_2.set_text("")   
        k=9+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_2.set_text(x)
        except:
            self.E_9_2.set_text("")
        

        i=3
        self.E_9_3.set_text("")    
        k=9+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_3.set_text(x)
        except:
            self.E_9_3.set_text("")


        i=4
        self.E_9_4.set_text("")    
        k=9+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_4.set_text(x)
        except:
            self.E_9_4.set_text("")



        i=5
        self.E_9_5.set_text("")    
        k=9+(s_zahl_0-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_5.set_text(x)
        except:
            self.E_9_5.set_text("")

            
    def updateUser(self):
        #Users
        self.E_0_0 = self.builder.get_object("User_Id_0")
        self.E_1_0 = self.builder.get_object("User_Id_1")
        self.E_2_0 = self.builder.get_object("User_Id_2")
        self.E_3_0 = self.builder.get_object("User_Id_3")
        self.E_4_0 = self.builder.get_object("User_Id_4")
        self.E_5_0 = self.builder.get_object("User_Id_5")
        self.E_6_0 = self.builder.get_object("User_Id_6")
        self.E_7_0 = self.builder.get_object("User_Id_7")
        self.E_8_0 = self.builder.get_object("User_Id_8")
        self.E_9_0 = self.builder.get_object("User_Id_9")
        
        self.E_0_1 = self.builder.get_object("User_Name_0")
        self.E_1_1 = self.builder.get_object("User_Name_1")
        self.E_2_1 = self.builder.get_object("User_Name_2")
        self.E_3_1 = self.builder.get_object("User_Name_3")
        self.E_4_1 = self.builder.get_object("User_Name_4")
        self.E_5_1 = self.builder.get_object("User_Name_5")
        self.E_6_1 = self.builder.get_object("User_Name_6")
        self.E_7_1 = self.builder.get_object("User_Name_7")
        self.E_8_1 = self.builder.get_object("User_Name_8")
        self.E_9_1 = self.builder.get_object("User_Name_9")
        
        self.E_0_2 = self.builder.get_object("User_Surename_0")
        self.E_1_2 = self.builder.get_object("User_Surename_1")
        self.E_2_2 = self.builder.get_object("User_Surename_2")
        self.E_3_2 = self.builder.get_object("User_Surename_3")
        self.E_4_2 = self.builder.get_object("User_Surename_4")
        self.E_5_2 = self.builder.get_object("User_Surename_5")
        self.E_6_2 = self.builder.get_object("User_Surename_6")
        self.E_7_2 = self.builder.get_object("User_Surename_7")
        self.E_8_2 = self.builder.get_object("User_Surename_8")
        self.E_9_2 = self.builder.get_object("User_Surename_9")
        
        self.E_0_3 = self.builder.get_object("User_Class_0")
        self.E_1_3 = self.builder.get_object("User_Class_1")
        self.E_2_3 = self.builder.get_object("User_Class_2")
        self.E_3_3 = self.builder.get_object("User_Class_3")
        self.E_4_3 = self.builder.get_object("User_Class_4")
        self.E_5_3 = self.builder.get_object("User_Class_5")
        self.E_6_3 = self.builder.get_object("User_Class_6")
        self.E_7_3 = self.builder.get_object("User_Class_7")
        self.E_8_3 = self.builder.get_object("User_Class_8")
        self.E_9_3 = self.builder.get_object("User_Class_9")
        
        
        global s_zahl_1
        connection = sqlite3.connect(db)
        cursor= connection.cursor()
        sql = "SELECT * FROM Users"
        cursor.execute(sql)
        
        text=""
        column_x=[]
        row_x=[]
    
        i=0
        for row in cursor:
        


            r0=str(row[0])
            r1=str(row[1])
            r2=str(row[2])
            r3=str(row[3])
                   
        
            column_x = [(r0, r1, r2, r3)]
            row_x.extend(column_x)
        

    
        connection.commit()
        connection.close()
        print("len(column_x)", len(column_x))
        print("len(row_x)", len(row_x))
        x=len(row_x)

        #Reihe 0
        i=0
        self.E_0_0.set_text("")    
        k=0+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_0.set_text(x)
        except:
            self.E_0_0.set_text("")


        i=1
        self.E_0_1.set_text("")    
        k=0+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_0_1.set_text(x)
        except:
            self.E_0_1.set_text("")
        

        i=2
        self.E_0_2.set_text("")    
        k=0+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_2.set_text(x)
        except:
            self.E_0_2.set_text("")
        

        i=3
        self.E_0_3.set_text("")    
        k=0+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_3.set_text(x)
        except:
            self.E_0_3.set_text("")

        #Reihe1
        i=0
        self.E_1_0.set_text("")    
        k=1+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_0.set_text(x)
        except:
            self.E_1_0.set_text("")


        i=1
        self.E_1_1.set_text("")    
        k=1+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_1_1.set_text(x)
        except:
            self.E_1_1.set_text("")
        

        i=2
        self.E_1_2.set_text("")    
        k=1+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_2.set_text(x)
        except:
            self.E_1_2.set_text("")
        

        i=3
        self.E_1_3.set_text("")    
        k=1+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_3.set_text(x)
        except:
            self.E_1_3.set_text("")

        #Reihe2
        i=0
        self.E_2_0.set_text("")    
        k=2+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_0.set_text(x)
        except:
            self.E_2_0.set_text("")


        i=1
        self.E_2_1.set_text("")    
        k=2+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_2_1.set_text(x)
        except:
            self.E_2_1.set_text("")
        

        i=2
        self.E_2_2.set_text("")    
        k=2+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_2.set_text(x)
        except:
            self.E_2_2.set_text("")
        

        i=3
        self.E_2_3.set_text("")    
        k=2+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_3.set_text(x)
        except:
            self.E_2_3.set_text("")

        #Reihe3
        i=0
        self.E_3_0.set_text("")    
        k=3+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_0.set_text(x)
        except:
            self.E_3_0.set_text("")


        i=1
        self.E_3_1.set_text("")    
        k=3+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_3_1.set_text(x)
        except:
            self.E_3_1.set_text("")
        

        i=2
        self.E_3_2.set_text("")    
        k=3+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_2.set_text(x)
        except:
            self.E_3_2.set_text("")
        

        i=3
        self.E_3_3.set_text("")    
        k=3+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_3.set_text(x)
        except:
            self.E_3_3.set_text("")
   

        #Reihe4
        i=0
        self.E_4_0.set_text("")    
        k=4+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_0.set_text(x)
        except:
            self.E_4_0.set_text("")


        i=1
        self.E_4_1.set_text("")    
        k=4+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_4_1.set_text(x)
        except:
            self.E_4_1.set_text("")
        

        i=2
        self.E_4_2.set_text("")    
        k=4+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_2.set_text(x)
        except:
            self.E_4_2.set_text("")
        

        i=3
        self.E_4_3.set_text("")    
        k=4+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_3.set_text(x)
        except:
            self.E_4_3.set_text("")
    
        #Reihe5
        i=0
        self.E_5_0.set_text("")    
        k=5+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_0.set_text(x)
        except:
            self.E_5_0.set_text("")


        i=1
        self.E_5_1.set_text("")   
        k=5+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_5_1.set_text(x)
        except:
            self.E_5_1.set_text("")
        

        i=2
        self.E_5_2.set_text("")    
        k=5+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_2.set_text(x)
        except:
            self.E_5_2.set_text("")
        

        i=3
        self.E_5_3.set_text("")   
        k=5+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_3.set_text(x)
        except:
            self.E_5_3.set_text("")

        #Reihe6
        i=0
        self.E_6_0.set_text("")  
        k=6+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_0.set_text(x)
        except:
            self.E_6_0.set_text("")


        


        i=1
        self.E_6_1.set_text("") 
        k=6+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_6_1.set_text(x)
        except:
            self.E_6_1.set_text("")
        

        i=2
        self.E_6_2.set_text("")    
        k=6+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_2.set_text(x)
        except:
            self.E_6_2.set_text("")
        

        i=3
        self.E_6_3.set_text("")    
        k=6+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_3.set_text(x)
        except:
            self.E_6_3.set_text("")

        #Reihe7
        i=0
        self.E_7_0.set_text("")   
        k=7+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_0.set_text(x)
        except:
            self.E_7_0.set_text("")


        i=1
        self.E_7_1.set_text("")    
        k=7+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_7_1.set_text(x)
        except:
            self.E_7_1.set_text("")
        

        i=2
        self.E_7_2.set_text("")    
        k=7+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_2.set_text(x)
        except:
            self.E_7_2.set_text("")
        

        i=3
        self.E_7_3.set_text("")    
        k=7+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_3.set_text(x)
        except:
            self.E_7_3.set_text("")

        #Reihe8
        i=0
        self.E_8_0.set_text("")    
        k=8+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_0.set_text(x)
        except:
            self.E_8_0.set_text("")


        i=1
        self.E_8_1.set_text("")    
        k=8+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_8_1.set_text(x)
        except:
            self.E_8_1.set_text("")
        

        i=2
        self.E_8_2.set_text("")    
        k=8+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_2.set_text(x)
        except:
            self.E_8_2.set_text("")
        

        i=3
        self.E_8_3.set_text("")    
        k=8+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_3.set_text(x)
        except:
            self.E_8_3.set_text("")

        #Reihe9
        i=0
        self.E_9_0.set_text("")    
        k=9+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_0.set_text(x)
        except:
            self.E_9_0.set_text("")


        i=1
        self.E_9_1.set_text("")   
        k=9+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_9_1.set_text(x)
        except:
            self.E_9_1.set_text("")
        

        i=2
        self.E_9_2.set_text("")   
        k=9+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_2.set_text(x)
        except:
            self.E_9_2.set_text("")
        

        i=3
        self.E_9_3.set_text("")    
        k=9+(s_zahl_1-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_3.set_text(x)
        except:
            self.E_9_3.set_text("")

    def updateGets(self):
        #Gets
        self.E_0_0 = self.builder.get_object("Get_Id_0")
        self.E_1_0 = self.builder.get_object("Get_Id_1")
        self.E_2_0 = self.builder.get_object("Get_Id_2")
        self.E_3_0 = self.builder.get_object("Get_Id_3")
        self.E_4_0 = self.builder.get_object("Get_Id_4")
        self.E_5_0 = self.builder.get_object("Get_Id_5")
        self.E_6_0 = self.builder.get_object("Get_Id_6")
        self.E_7_0 = self.builder.get_object("Get_Id_7")
        self.E_8_0 = self.builder.get_object("Get_Id_8")
        self.E_9_0 = self.builder.get_object("Get_Id_9")
        
        self.E_0_1 = self.builder.get_object("Get_NSC_0")
        self.E_1_1 = self.builder.get_object("Get_NSC_1")
        self.E_2_1 = self.builder.get_object("Get_NSC_2")
        self.E_3_1 = self.builder.get_object("Get_NSC_3")
        self.E_4_1 = self.builder.get_object("Get_NSC_4")
        self.E_5_1 = self.builder.get_object("Get_NSC_5")
        self.E_6_1 = self.builder.get_object("Get_NSC_6")
        self.E_7_1 = self.builder.get_object("Get_NSC_7")
        self.E_8_1 = self.builder.get_object("Get_NSC_8")
        self.E_9_1 = self.builder.get_object("Get_NSC_9")
        
        self.E_0_2 = self.builder.get_object("Get_UserId_0")
        self.E_1_2 = self.builder.get_object("Get_UserId_1")
        self.E_2_2 = self.builder.get_object("Get_UserId_2")
        self.E_3_2 = self.builder.get_object("Get_UserId_3")
        self.E_4_2 = self.builder.get_object("Get_UserId_4")
        self.E_5_2 = self.builder.get_object("Get_UserId_5")
        self.E_6_2 = self.builder.get_object("Get_UserId_6")
        self.E_7_2 = self.builder.get_object("Get_UserId_7")
        self.E_8_2 = self.builder.get_object("Get_UserId_8")
        self.E_9_2 = self.builder.get_object("Get_UserId_9")
        
        self.E_0_3 = self.builder.get_object("Get_DevId_0")
        self.E_1_3 = self.builder.get_object("Get_DevId_1")
        self.E_2_3 = self.builder.get_object("Get_DevId_2")
        self.E_3_3 = self.builder.get_object("Get_DevId_3")
        self.E_4_3 = self.builder.get_object("Get_DevId_4")
        self.E_5_3 = self.builder.get_object("Get_DevId_5")
        self.E_6_3 = self.builder.get_object("Get_DevId_6")
        self.E_7_3 = self.builder.get_object("Get_DevId_7")
        self.E_8_3 = self.builder.get_object("Get_DevId_8")
        self.E_9_3 = self.builder.get_object("Get_DevId_9")
        
        self.E_0_4 = self.builder.get_object("Get_Date_0")
        self.E_1_4 = self.builder.get_object("Get_Date_1")
        self.E_2_4 = self.builder.get_object("Get_Date_2")
        self.E_3_4 = self.builder.get_object("Get_Date_3")
        self.E_4_4 = self.builder.get_object("Get_Date_4")
        self.E_5_4 = self.builder.get_object("Get_Date_5")
        self.E_6_4 = self.builder.get_object("Get_Date_6")
        self.E_7_4 = self.builder.get_object("Get_Date_7")
        self.E_8_4 = self.builder.get_object("Get_Date_8")
        self.E_9_4 = self.builder.get_object("Get_Date_9")
        
              
        
        global s_zahl_2
        connection = sqlite3.connect(db)
        cursor= connection.cursor()
        sql = "SELECT * FROM Gets"
        cursor.execute(sql)
        
        text=""
        column_x=[]
        row_x=[]
    
        i=0
        for row in cursor:
        


            r0=str(row[0])
            r1=str(row[1])
            r2=str(row[2])
            r3=str(row[3])
            r4=str(row[4])
                    
        
            column_x = [(r0, r1, r2, r3, r4)]
            row_x.extend(column_x)
        

    
        connection.commit()
        connection.close()
        print("len(column_x)", len(column_x))
        print("len(row_x)", len(row_x))
        x=len(row_x)

        #Reihe 0
        i=0
        self.E_0_0.set_text("")    
        k=0+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_0.set_text(x)
        except:
            self.E_0_0.set_text("")


        i=1
        self.E_0_1.set_text("")    
        k=0+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_0_1.set_text(x)
        except:
            self.E_0_1.set_text("")
        

        i=2
        self.E_0_2.set_text("")    
        k=0+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_2.set_text(x)
        except:
            self.E_0_2.set_text("")
        

        i=3
        self.E_0_3.set_text("")    
        k=0+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_3.set_text(x)
        except:
            self.E_0_3.set_text("")


        i=4
        self.E_0_4.set_text("")    
        k=0+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_0_4.set_text(x)
        except:
            self.E_0_4.set_text("")

        #Reihe1
        i=0
        self.E_1_0.set_text("")    
        k=1+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_0.set_text(x)
        except:
            self.E_1_0.set_text("")


        i=1
        self.E_1_1.set_text("")    
        k=1+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_1_1.set_text(x)
        except:
            self.E_1_1.set_text("")
        

        i=2
        self.E_1_2.set_text("")    
        k=1+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_2.set_text(x)
        except:
            self.E_1_2.set_text("")
        

        i=3
        self.E_1_3.set_text("")    
        k=1+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_3.set_text(x)
        except:
            self.E_1_3.set_text("")


        i=4
        self.E_1_4.set_text("")    
        k=1+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_1_4.set_text(x)
        except:
            self.E_1_4.set_text("")
        
        #Reihe2
        i=0
        self.E_2_0.set_text("")    
        k=2+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_0.set_text(x)
        except:
            self.E_2_0.set_text("")


        i=1
        self.E_2_1.set_text("")    
        k=2+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_2_1.set_text(x)
        except:
            self.E_2_1.set_text("")
        

        i=2
        self.E_2_2.set_text("")    
        k=2+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_2.set_text(x)
        except:
            self.E_2_2.set_text("")
        

        i=3
        self.E_2_3.set_text("")    
        k=2+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_3.set_text(x)
        except:
            self.E_2_3.set_text("")


        i=4
        self.E_2_4.set_text("")    
        k=2+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_2_4.set_text(x)
        except:
            self.E_2_4.set_text("")
        
        #Reihe3
        i=0
        self.E_3_0.set_text("")    
        k=3+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_0.set_text(x)
        except:
            self.E_3_0.set_text("")


        i=1
        self.E_3_1.set_text("")    
        k=3+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_3_1.set_text(x)
        except:
            self.E_3_1.set_text("")
        

        i=2
        self.E_3_2.set_text("")    
        k=3+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_2.set_text(x)
        except:
            self.E_3_2.set_text("")
        

        i=3
        self.E_3_3.set_text("")    
        k=3+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_3.set_text(x)
        except:
            self.E_3_3.set_text("")



        i=4
        self.E_3_4.set_text("")    
        k=3+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_3_4.set_text(x)
        except:
            self.E_3_4.set_text("")

        #Reihe4
        i=0
        self.E_4_0.set_text("")    
        k=4+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_0.set_text(x)
        except:
            self.E_4_0.set_text("")


        i=1
        self.E_4_1.set_text("")    
        k=4+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_4_1.set_text(x)
        except:
            self.E_4_1.set_text("")
        

        i=2
        self.E_4_2.set_text("")    
        k=4+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_2.set_text(x)
        except:
            self.E_4_2.set_text("")
        

        i=3
        self.E_4_3.set_text("")    
        k=4+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_3.set_text(x)
        except:
            self.E_4_3.set_text("")


        i=4
        self.E_4_4.set_text("")    
        k=4+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_4_4.set_text(x)
        except:
            self.E_4_4.set_text("")
        
        #Reihe5
        i=0
        self.E_5_0.set_text("")    
        k=5+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_0.set_text(x)
        except:
            self.E_5_0.set_text("")


        i=1
        self.E_5_1.set_text("")   
        k=5+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_5_1.set_text(x)
        except:
            self.E_5_1.set_text("")
        

        i=2
        self.E_5_2.set_text("")    
        k=5+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_2.set_text(x)
        except:
            self.E_5_2.set_text("")
        

        i=3
        self.E_5_3.set_text("")   
        k=5+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_3.set_text(x)
        except:
            self.E_5_3.set_text("")


        i=4
        self.E_5_4.set_text("")   
        k=5+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_5_4.set_text(x)
        except:
            self.E_5_4.set_text("")
        
        #Reihe6
        i=0
        self.E_6_0.set_text("")  
        k=6+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_0.set_text(x)
        except:
            self.E_6_0.set_text("")


        


        i=1
        self.E_6_1.set_text("") 
        k=6+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_6_1.set_text(x)
        except:
            self.E_6_1.set_text("")
        

        i=2
        self.E_6_2.set_text("")    
        k=6+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_2.set_text(x)
        except:
            self.E_6_2.set_text("")
        

        i=3
        self.E_6_3.set_text("")    
        k=6+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_3.set_text(x)
        except:
            self.E_6_3.set_text("")


        i=4
        self.E_6_4.set_text("")    
        k=6+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_6_4.set_text(x)
        except:
            self.E_6_4.set_text("")
        
        #Reihe7
        i=0
        self.E_7_0.set_text("")   
        k=7+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_0.set_text(x)
        except:
            self.E_7_0.set_text("")


        i=1
        self.E_7_1.set_text("")    
        k=7+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_7_1.set_text(x)
        except:
            self.E_7_1.set_text("")
        

        i=2
        self.E_7_2.set_text("")    
        k=7+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_2.set_text(x)
        except:
            self.E_7_2.set_text("")
        

        i=3
        self.E_7_3.set_text("")    
        k=7+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_3.set_text(x)
        except:
            self.E_7_3.set_text("")


        i=4
        self.E_7_4.set_text("")    
        k=7+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_7_4.set_text(x)
        except:
            self.E_7_4.set_text("")
        
        #Reihe8
        i=0
        self.E_8_0.set_text("")    
        k=8+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_0.set_text(x)
        except:
            self.E_8_0.set_text("")


        i=1
        self.E_8_1.set_text("")    
        k=8+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_8_1.set_text(x)
        except:
            self.E_8_1.set_text("")
        

        i=2
        self.E_8_2.set_text("")    
        k=8+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_2.set_text(x)
        except:
            self.E_8_2.set_text("")
        

        i=3
        self.E_8_3.set_text("")    
        k=8+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_3.set_text(x)
        except:
            self.E_8_3.set_text("")


        i=4
        self.E_8_4.set_text("")    
        k=8+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_8_4.set_text(x)
        except:
            self.E_8_4.set_text("")
        
        #Reihe9
        i=0
        self.E_9_0.set_text("")    
        k=9+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_0.set_text(x)
        except:
            self.E_9_0.set_text("")


        i=1
        self.E_9_1.set_text("")   
        k=9+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            print("x ",x)
            self.E_9_1.set_text(x)
        except:
            self.E_9_1.set_text("")
        

        i=2
        self.E_9_2.set_text("")   
        k=9+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_2.set_text(x)
        except:
            self.E_9_2.set_text("")
        

        i=3
        self.E_9_3.set_text("")    
        k=9+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_3.set_text(x)
        except:
            self.E_9_3.set_text("")


        i=4
        self.E_9_4.set_text("")    
        k=9+(s_zahl_2-1)*10
        x=""
        try:
            x=str(row_x[k][i])
            self.E_9_4.set_text(x)
        except:
            self.E_9_4.set_text("")

def main():
    if os.path.exists("/usr/local/share/topman/database.db") == False:
        connection = sqlite3.connect(db)
        cursor = connection.cursor()
        cursor.execute('''CREATE TABLE Devices(devId INTEGER PRIMARY KEY,devBrand TEXT,devModel TEXT,devOS,devHost,devState INTEGER)''')
        cursor.execute('''CREATE TABLE Users(userId INTEGER PRIMARY KEY,userName TEXT,userSurename TEXT,userClass TEXT)''')
        cursor.execute('''CREATE TABLE Gets(getId INTEGER PRIMARY KEY,getUser TEXT,getUserId INTEGER,getDevId INTEGER,getDate TEXT)''')
        connection.commit()
        connection.close()
    app = Handler()
    
    Gtk.main()
        
if __name__ == "__main__":
    sys.exit(main())

